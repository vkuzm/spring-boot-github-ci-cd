# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: 'spring-boot-ci-cd'
  CONTAINER_REGISTRY: ${{ secrets.REGISTRY_URL }}
  CONTAINER_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  JAVA_VERSION: '1.8'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
    - name: Run tests
      run: mvn test
    - name: Analyze with SonarCloud
      #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify sonar:sonar -Dsonar.projectKey=vkuzm_spring-boot-github-ci-cd -Dsonar.organization=vkuzm -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - uses: actions/checkout@v2
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Docker registry authentication
      uses: azure/docker-login@v1
      with:
        #login-server: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
    - name: Build
      run: mvn package -Dmaven.test.skip=true
      
    - name: Docker Build & Push to container registry
      run: |
        docker build . -t ${{ env.CONTAINER_REGISTRY_USERNAME }}/springbootapp:${{ github.sha }}
        docker push ${{ env.CONTAINER_REGISTRY_USERNAME }}/springbootapp:${{ github.sha }} 
      
    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} 
        images: registry.hub.docker.com/${{ env.CONTAINER_REGISTRY_USERNAME }}/springbootapp:${{ github.sha }}
        #startup-command: 'some command'    # Include start up command to start the app container
